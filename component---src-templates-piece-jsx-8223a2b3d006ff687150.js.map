{"version":3,"sources":["webpack:///./src/components/PieceNavigation.jsx","webpack:///./src/templates/piece.jsx"],"names":["Row","styled","nav","buttonIfDest","destination","label","Button","to","PieceNavigation","next","previous","tag","prevDestination","nextDestination","defaultProps","SubHeader","h2","Content","article","Template","data","pathContext","location","markdownRemark","fm","frontmatter","html","qs","parse","search","substring","directions","prev","Layout","Helmet","title","dangerouslySetInnerHTML","__html","query"],"mappings":"0bAMA,IAAMA,EAAMC,IAAOC,IAAV,KAKHC,EAAe,SAACC,EAAaC,GAAd,OAAyBD,EAC5C,kBAACE,EAAA,EAAD,CAAQC,GAAIH,GAAcC,GAC1B,KAGa,SAASG,EAAT,GAAmD,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,IAClDC,EAAkBD,GAAOD,EAAcA,EAArB,QAAqCC,EAAQD,EAC/DG,EAAkBF,GAAOF,EAAUA,EAAjB,QAA6BE,EAAQF,EAE7D,OACE,kBAACT,EAAD,KACE,6BACGG,EAAaS,EAAiB,eAEjC,8BACA,6BACGT,EAAaU,EAAiB,Y,yNAYvCL,EAAgBM,aAAe,CAC7BL,KAAM,KACNC,SAAU,KACVC,IAAK,IChCP,IAAMI,EAAYd,IAAOe,GAAV,KAITC,EAAUhB,IAAOiB,QAAV,KAIE,SAASC,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAAY,EAC9BF,EAAKG,eAAlBC,EAD2C,EACxDC,YAAiBC,EADuC,EACvCA,KACjBf,EAAQgB,IAAGC,MAAMN,EAASO,OAAOC,UAAU,IAA3CnB,IAFwD,EAG3CU,EAAYU,WAAWpB,GAAO,KAA5CqB,EAHyD,KAGnDvB,EAHmD,KAKhE,OACE,kBAACwB,EAAA,EAAD,CAAQX,SAAUA,GAChB,kBAACY,EAAA,EAAD,CAAQC,MAAOX,EAAGW,QAClB,kBAACpB,EAAD,KAAaS,EAAGW,OAChB,kBAAC3B,EAAD,CAAiBE,SAAUsB,EAAMvB,KAAMA,EAAME,IAAKA,IAClD,kBAACM,EAAD,CAASmB,wBAAyB,CAAEC,OAAQX,MAe3C,IAAMY,EAAK","file":"component---src-templates-piece-jsx-8223a2b3d006ff687150.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Button from './Button';\n\nconst Row = styled.nav`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst buttonIfDest = (destination, label) => (destination ?\n  <Button to={destination}>{label}</Button> :\n  '\\u00A0'\n);\n\nexport default function PieceNavigation({ next, previous, tag }) {\n  const prevDestination = tag && previous ? `${previous}?tag=${tag}` : previous;\n  const nextDestination = tag && next ? `${next}?tag=${tag}` : next;\n\n  return (\n    <Row>\n      <div>\n        {buttonIfDest(prevDestination, '⇐ Previous')}\n      </div>\n      <div />\n      <div>\n        {buttonIfDest(nextDestination, 'Next ⇒')}\n      </div>\n    </Row>\n  );\n}\n\nPieceNavigation.propTypes = {\n  next: PropTypes.string,\n  previous: PropTypes.string,\n  tag: PropTypes.string,\n};\n\nPieceNavigation.defaultProps = {\n  next: null,\n  previous: null,\n  tag: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport qs from 'qs';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport PieceNavigation from '../components/PieceNavigation';\n\nconst SubHeader = styled.h2`\n  text-align: center;\n`;\n\nconst Content = styled.article`\n  margin-top: 2rem;\n`;\n\nexport default function Template({ data, pathContext, location }) {\n  const { frontmatter: fm, html } = data.markdownRemark;\n  const { tag } = qs.parse(location.search.substring(1));\n  const [prev, next] = pathContext.directions[tag || '*'];\n\n  return (\n    <Layout location={location}>\n      <Helmet title={fm.title} />\n      <SubHeader>{ fm.title }</SubHeader>\n      <PieceNavigation previous={prev} next={next} tag={tag} />\n      <Content dangerouslySetInnerHTML={{ __html: html }} />\n    </Layout>\n  );\n}\n\nTemplate.propTypes = {\n  data: PropTypes.shape().isRequired,\n  pathContext: PropTypes.shape({\n    directions: PropTypes.string,\n  }).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport const query = graphql`\n  query PieceByPath($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}