{"version":3,"sources":["webpack:///./src/templates/tag.jsx"],"names":["Template","data","location","tag","pathContext","pieces","allMarkdownRemark","edges","appendTag","query"],"mappings":"2FAAA,sIAOe,SAASA,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAC/BC,EADwD,EAAfC,YACzCD,IACR,OACE,kBAAC,IAAD,CAAQD,SAAUA,GAChB,kBAAC,IAAD,CAAQG,OAAQJ,EAAKK,kBAAkBC,MAAOC,UAAWL,KAYxD,IAAMM,EAAK","file":"component---src-templates-tag-jsx-44413097252fc0936bb6.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport Pieces from '../components/Pieces';\n\nexport default function Template({ data, location, pathContext }) {\n  const { tag } = pathContext;\n  return (\n    <Layout location={location}>\n      <Pieces pieces={data.allMarkdownRemark.edges} appendTag={tag} />\n    </Layout>\n  );\n}\n\nTemplate.propTypes = {\n  data: PropTypes.shape().isRequired,\n  pathContext: PropTypes.shape({\n    slug: PropTypes.string,\n  }).isRequired,\n};\n\nexport const query = graphql`\nquery TagPage($tag: String) {\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___order], order: DESC }\n    filter: {\n      frontmatter: { tags: { in: [$tag] } }\n      html: { ne: \"\" }\n    }\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          thumbnail {\n            childImageSharp {\n              fixed(width: 200, height: 200) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;"],"sourceRoot":""}